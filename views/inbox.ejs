<%- include('./partials/header.ejs'); %>
<div id="chat-container">
    <div id="search-container">
        <input type="text" placeholder="Search" />
    </div>
    <!-- Conversation List start -->
    <div id="conversation-list">
        <% if (all_conversation.length > 0) { %> <% all_conversation.forEach((conversation) => { %>
        <div class="conversation" onclick="getMessages('<%= conversation._id %>')">
          <%= console.log("VVV", conversation) %>
            <img src="./uploads/avatars/<%= conversation.participant %>" alt="" />
            <div class="title-text"><%= conversation.participant %></div>
            <di class="created-date"> Apr 16 </di>
            <div class="conversation-message">This is a message</div>
        </div>
        <% }) %> <% } %>

        <!-- show no conversation placeholder image for 0 conversations -->
        <% if(all_conversation && all_conversation.length === 0) { %>
        <div class="nothing"><img src="./images/no-conversation.svg" /></div>
        <% } %>
    </div>
    <!-- Conversation List end -->
    <div id="new-coversation-container">
        <a href="#" onclick="openModal()">+</a>
    </div>
    <!-- Delete converstion -->
    <div id="chat-title">
        <span id="conversation-partner"></span>
        <img src="./images/trash.png" alt="Delete Conversation" />
    </div>
    <!-- Delete converstion -->
    <!-- placeholder div if no messages are in messages area -->
    <div id="chat-message-list">
        <div class="nothing">select a conversation</div>
    </div>
    <!-- send message form -->
    <form id="chat-form" method="post" enctype="multipart/form-data"  class="hidden">
      <input type="hidden" name="conversation_id" id="conversation_id" value=""/>
      <label for="attachment"><img src="./images/attachment.png" alt="Add Attachment" /></label>
      <input type="file" multiple name="attachment" class="hide" id="attachment" />
      <input type="text" name="message" placeholder="Type a message"/>
      <button type="submit" style="display:none;"></button>
    </form> 
</div>

<div class="modal-wrapper">
    <div class="modal">
        <a href="#" class="modal-close">+</a>
        <div class="modal-title">
            <h2>Create New Conversation</h2>
        </div>
        <div class="modal-body">
            <form>
                <input type="text" placeholder="Name" />
                <input type="text" placeholder="Username" />
                <input type="button" value="Submit" />
            </form>
        </div>
    </div>
</div>
<%- include('./partials/add-conversation-modal.ejs'); %>
<script>
  const chat_form = document.getElementById("chat-form");
  // create Conversation
  async function createConversation(participant_id) {
    try {
      const response = await fetch("/inbox/create-conversation", {
        method: "POST",
        body: JSON.stringify({
          id: participant_id,
        }),
        headers: {
          "Content-type": "application/json; charset=UTF-8",
        },
      });

      const result = await response.json();

      if (!result.errors) {
        // reset
        users_placeholder.style.display = "none";
        input.value = name;
        // reload the page after 1 second
        setTimeout(() => {
          location.reload();
        }, 1000);
      } else {
        throw new Error(result.errors.common.msg);
      }
    } catch (err) {
      const toastObject = showErrorToast(err)
      toastObject.showToast();
    }
  }
  // To ACtive the slected chat
  document.addEventListener("DOMContentLoaded", function () {
    var conversations = document.querySelectorAll('.conversation');

    conversations.forEach(function (conversation) {
      conversation.addEventListener('click', function () {
        // Remove 'active' class from all conversations
        conversations.forEach(function (conv) {
          conv.classList.remove('active');
        });
        // Add 'active' class to the clicked conversation
        conversation.classList.add('active');
        chat_form.style.visibility = 'visible'
      });
    });
  });

  // Get message of the chats 
  async function getMessages (conversation_id){
    try {
      const conversationIdInput = document.getElementById('conversation_id');
      conversationIdInput.value = conversation_id;

      const response = await fetch("/inbox/get-message", {
        method: "POST",
        body: JSON.stringify({
          conversation_id
        }),
        headers: {
          "Content-type": "application/json; charset=UTF-8",
        },
      });
      const data = await response.json() ;
      console.log("Inbox data of get message", data);
    } catch (error) {
      console.log(error);
    }
  }
  
  // Message submit 
  chat_form.addEventListener("submit", async (e) => {
    e.preventDefault(); 
    const form_data = new FormData(chat_form) ;
    // for(data of form_data.entries()){
      //   console.log(data);
      // }
      const response = await fetch("/inbox/submit-message", {
        method: "POST",
        body: form_data,
      })
      .then((data) => {
        console.log(data);
      })


  });
</script>
<%- include('./partials/footer.ejs'); %>
